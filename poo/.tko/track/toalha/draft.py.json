{
    "patches": [
        {
            "label": "2025-09-16_19-40-57",
            "content": "@@ -1,190 +1,12 @@\n-class Towel:%0A    def __init__(self):%0A        self.color = %22azul%22%0A        self.size = %22m%22%0A        self.wetness = %220%22%0A%0Atowel = Towel()%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness\n+print(%22ola%22\n )\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-09-01",
            "content": "@@ -130,31 +130,8 @@\n l()%0A\n-towel.color = %22branco%22%0A\n prin\n",
            "lines": "10"
        },
        {
            "label": "2025-09-16_20-10-07",
            "content": "@@ -126,35 +126,16 @@\n Towel()%0A\n-print(towel.color)%0A\n towel.co\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-10-25",
            "content": "@@ -31,31 +31,8 @@\n self\n-, color: str, size: str\n ):%0A \n@@ -51,21 +51,22 @@\n color = \n-color\n+%22azul%22\n %0A       \n@@ -78,20 +78,19 @@\n .size = \n-size\n+%22m%22\n %0A       \n@@ -109,9 +109,11 @@\n s = \n-0\n+%220%22\n %0A%0Ato\n@@ -145,16 +145,58 @@\n .color)%0A\n+towel.color = %22branco%22%0Aprint(towel.color)%0A\n print(to\n",
            "lines": "12"
        },
        {
            "label": "2025-09-16_20-13-59",
            "content": "@@ -149,19 +149,8 @@\n wel(\n-%22green%22,%22g%22\n )%0Apr\n",
            "lines": "10"
        },
        {
            "label": "2025-09-16_20-14-25",
            "content": "@@ -162,35 +162,8 @@\n g%22)%0A\n-towel = Towel(%22black%22,%22p%22)%0A\n prin\n",
            "lines": "10"
        },
        {
            "label": "2025-09-16_20-15-09",
            "content": "@@ -164,12 +164,11 @@\n )%0Ato\n-alha\n+wel\n  = T\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-15-39",
            "content": "@@ -160,19 +160,20 @@\n ,%22g%22)%0Ato\n-wel\n+alha\n  = Towel\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-15-46",
            "content": "@@ -163,17 +163,16 @@\n %22)%0Atowel\n-1\n  = Towel\n@@ -246,65 +246,4 @@\n ess)\n-%0Aprint(towel1.color)%0Aprint(towel1.size)%0Aprint(towel1.wetness)\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-17-02",
            "content": "@@ -248,14 +248,8 @@\n ss)%0A\n-break%0A\n prin\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-17-13",
            "content": "@@ -244,16 +244,22 @@\n etness)%0A\n+break%0A\n print(to\n",
            "lines": "15"
        },
        {
            "label": "2025-09-16_20-17-55",
            "content": "@@ -247,10 +247,8 @@\n ess)\n-n/\n %0Apri\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-18-04",
            "content": "@@ -248,9 +248,9 @@\n ss)n\n-%5C\n+/\n %0Apri\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-18-09",
            "content": "@@ -243,16 +243,18 @@\n wetness)\n+n%5C\n %0Aprint(t\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-18-12",
            "content": "@@ -53,17 +53,16 @@\n : str):%0A\n-%0A\n         \n@@ -132,122 +132,9 @@\n s = \n-%0A        0%0A    def __str__(self): int = 0%0A%0A        return f%22cor:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22\n+0\n %0A%0Ato\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-22-03",
            "content": "@@ -304,33 +304,122 @@\n p%22)%0A\n-outra = toalha%0Aprint(towel)%0A%0A\n+print(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)%0Aprint(towel1.color)%0Aprint(towel1.size)%0Aprint(towel1.wetness)\n",
            "lines": "19"
        },
        {
            "label": "2025-09-16_20-23-15",
            "content": "@@ -1,329 +1,55 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A%0A        self.color = color%0A        self.size = size%0A        self.wetness = %0A        0%0A    def __str__(self): %0A%0A        return f%22cor:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0Atowel = Towel(%22green%22,%22g%22)%0Atowel1 = Towel(%22black%22,%22p%22)%0Aoutra = toalha%0Aprint(towel)%0A\n+@@ -163,16 +163,23 @@%0A (self): %0A+int = 0%0A %250A%250A      \n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-09-16_20-23-33",
            "content": "@@ -1,317 +1,56 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A%0A        self.color = color%0A        self.size = size%0A        self.wetness = %0A        0%0A    def __str__(self): %0A%0A        return f%22cor:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0Atowel = Towel(%22green%22,%22g%22)%0Atowel1 = Towel(%22black%22,%22p%22)%0Aoutra = toalha%0A%0A\n+@@ -308,10 +308,22 @@%0A  toalha%250A%0A+print(towel)%0A %250A%250A\n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-09-16_20-23-47",
            "content": "@@ -129,17 +129,16 @@\n tness = \n-0\n %0A       \n",
            "lines": "16"
        },
        {
            "label": "2025-09-16_20-24-03",
            "content": "@@ -139,16 +139,17 @@\n         \n+0\n %0A    def\n",
            "lines": "16"
        },
        {
            "label": "2025-09-16_20-24-08",
            "content": "@@ -130,16 +130,17 @@\n ness = 0\n+%0A\n         \n",
            "lines": "16"
        },
        {
            "label": "2025-09-16_20-24-11",
            "content": "@@ -292,11 +292,25 @@\n k%22,%22p%22)%0A\n+outra = toalha\n %0A%0A%0A\n",
            "lines": "15"
        },
        {
            "label": "2025-09-22_19-07-28",
            "content": "@@ -136,339 +136,14 @@\n  0  \n-%0A%0A\n     \n-def dry (self, amount:int) -%3E None:%0A        self.wetness =+ amount%0A        if self.wetness %3E= self.getMAxetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def isDry (self) -%3E bool:%0A        return self.wetness == 0%0A%0A    def WringOut(self) -%3E None:%0A        self.wetness == 0%0A\n+  \n %0A   \n@@ -164,15 +164,8 @@\n elf)\n- -%3E str\n : %0A%0A\n@@ -241,23 +241,21 @@\n %7D%22%0A%0A\n-doguito\n+towel\n  = Towel\n  (%22E\n@@ -254,160 +254,48 @@\n owel\n- \n (%22\n-Encardida%22,%22G%22)%0Adoguito.size = %22M%22%0Aprint(doguito) %0Adoguito,dry(3)%0Aprint(doguito)%0Adoguito.dry(15)%0Adoguito.dry(10)%0Aprint(doguito)%0Aprint(doguito.isDry()\n+green%22,%22g%22)%0Atowel1 = Towel(%22black%22,%22p%22\n )%0A%0A%0A\n",
            "lines": "15"
        },
        {
            "label": "2025-09-22_19-21-04",
            "content": "@@ -138,211 +138,8 @@\n   %0A%0A\n-    def getMaxWetness(self):%0A        if self.size == %22P%22%0A            return 10%0A%0A        elif self.size == %22M%22%0A            return 20%0A%0A        elif self.size == %22G%22%0A            return 30%0A        return 0%0A%0A\n     \n@@ -166,32 +166,32 @@\n t:int) -%3E None:%0A\n+\n         self.wet\n@@ -345,67 +345,8 @@\n ()%0A%0A\n-    def WringOut(self) -%3E None:%0A        self.wetness == 0%0A%0A\n     \n@@ -405,16 +405,75 @@\n s == 0%0A%0A\n+    def WringOut(self) -%3E None:%0A        self.wetness == 0%0A%0A\n     def \n@@ -495,16 +495,17 @@\n %3E str: %0A\n+%0A\n         \n@@ -574,38 +574,22 @@\n %22%0A%0Ad\n-ef main ():%0A    toalha\n+oguito\n  = Towel\n (%22%22,\n@@ -588,489 +588,161 @@\n owel\n+ \n (%22\n-%22, %22%22)%0A    while True:%0A        line: str = input()%0A        agrs: list%5Bstr%5D = line.split(%22 %22)%0A        if args %5B0%5D\n+Encardida%22,%22G%22)%0Adoguito.size\n  =\n-=\n  %22\n-end%22%0A            break%0A        elif args%5B0%5D == %22new%22%0A            color = args%5B1%5D%0A            size = agrs%5B2%5D%0A            toalha = Towel(color,size)%0A        elif args%5B0%5D == %22show%22%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else%0A        print(%22fail: comando naon identificado%22)\n+M%22%0Aprint(doguito) %0Adoguito,dry(3)%0Aprint(doguito)%0Adoguito.dry(15)%0Adoguito.dry(10)%0Aprint(doguito)%0Aprint(doguito.isDry())%0A%0A%0A\n %0A\n",
            "lines": "35"
        },
        {
            "label": "2025-09-22_19-55-26",
            "content": "@@ -190,17 +190,16 @@\n e == %22P%22\n-:\n %0A       \n@@ -243,17 +243,16 @@\n e == %22M%22\n-:\n %0A       \n@@ -296,17 +296,16 @@\n e == %22G%22\n-:\n %0A       \n@@ -925,17 +925,16 @@\n == %22end%22\n-:\n %0A       \n@@ -973,17 +973,16 @@\n == %22new%22\n-:\n %0A       \n@@ -1098,17 +1098,16 @@\n = %22show%22\n-:\n %0A       \n@@ -1154,17 +1154,16 @@\n == %22dry%22\n-:\n %0A       \n@@ -1237,17 +1237,16 @@\n     else\n-:\n %0A       \n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_19-56-28",
            "content": "@@ -1250,28 +1250,24 @@\n se:%0A        \n-    \n print(%22fail:\n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_19-56-38",
            "content": "@@ -1282,16 +1282,17 @@\n ando nao\n+n\n  identif\n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_19-58-39",
            "content": "@@ -1200,17 +1200,16 @@\n args%5B1%5D)\n-r\n %0A       \n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_19-59-24",
            "content": "@@ -1200,16 +1200,17 @@\n args%5B1%5D)\n+r\n %0A       \n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_19-22-58",
            "content": "@@ -53,16 +53,17 @@\n : str):%0A\n+%0A\n         \n@@ -72,21 +72,16 @@\n lf.color\n-: str\n  = color\n@@ -98,21 +98,16 @@\n elf.size\n-: str\n  = size%0A\n@@ -130,19 +130,220 @@\n ness\n-: int\n  = 0  \n+%0A%0A    def getMaxWetness(self):%0A        if self.size == %22P%22:%0A            return 10%0A%0A        elif self.size == %22M%22:%0A            return 20%0A%0A        elif self.size == %22G%22:%0A            return 30%0A        return 0\n %0A%0A  \n@@ -405,10 +405,10 @@\n ess \n-+\n =\n++\n  amo\n@@ -559,14 +559,16 @@\n def \n-isDry \n+WringOut\n (sel\n@@ -577,12 +577,12 @@\n  -%3E \n-bool\n+None\n :%0A  \n@@ -587,23 +587,16 @@\n         \n-return \n self.wet\n@@ -610,32 +610,30 @@\n  0%0A%0A    def \n-WringOut\n+isDry \n (self) -%3E No\n@@ -622,36 +622,36 @@\n isDry (self) -%3E \n-None\n+bool\n :%0A        self.w\n@@ -636,32 +636,39 @@\n %3E bool:%0A        \n+return \n self.wetness == \n@@ -668,20 +668,16 @@\n ess == 0\n-    \n %0A%0A    de\n@@ -682,109 +682,257 @@\n def \n-getMaxWetness(self):%0A        if self.size == %22P%22:%0A            return 10%0A%0A        elif self.size\n+__str__(self) -%3E str: %0A        return f%22cor:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0Adef main ():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        agrs: list%5Bstr%5D = line.split(%22 %22)%0A        if args %5B0%5D\n  == %22\n-M\n+end\n %22:%0A \n@@ -938,34 +938,29 @@\n             \n+b\n re\n-turn 20%0A\n+ak\n %0A        eli\n@@ -957,39 +957,39 @@\n        elif \n-self.size\n+args%5B0%5D\n  == %22\n-G\n+new\n %22:%0A         \n@@ -995,279 +995,311 @@\n     \n-return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: %0A        return f%22cor:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0Adoguito.Towel(%22Encardida%22, %22G%22)%0Adoguito.size = %22M%22%0Aprint(dopguito)%0Adoguito.dry(3)%0Aprint(doguito)%0Adoguito.dry(15)%0Adoguito.dry(10)%0Aprint(doguito)\n+color = args%5B1%5D%0A            size = agrs%5B2%5D%0A            toalha = Towel(color,size)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print(%22fail: comando nao identificado%22)%0A\n",
            "lines": "51"
        },
        {
            "label": "2025-09-29_19-19-07",
            "content": "@@ -796,24 +796,8 @@\n %7D%22%0A%0A\n-def main():%0A    \n dogu\n@@ -824,20 +824,16 @@\n %22, %22G%22)%0A\n-    \n doguito.\n@@ -843,20 +843,16 @@\n e = %22M%22%0A\n-    \n print(do\n@@ -855,28 +855,24 @@\n t(dopguito)%0A\n-    \n doguito.dry(\n@@ -874,20 +874,16 @@\n .dry(3)%0A\n-    \n print(do\n@@ -889,20 +889,16 @@\n oguito)%0A\n-    \n doguito.\n@@ -905,20 +905,16 @@\n dry(15)%0A\n-    \n doguito.\n@@ -921,20 +921,16 @@\n dry(10)%0A\n-    \n print(do\n@@ -939,11 +939,4 @@\n ito)\n-%0Amain()\n",
            "lines": "40"
        },
        {
            "label": "2025-09-29_19-21-11",
            "content": "@@ -812,397 +812,178 @@\n     \n-toalha = \n+doguito.\n Towel\n- \n (%22\n+Encardida\n %22, %22\n+G\n %22)%0A    \n-While = True%0A        line:str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22new%22:%0A            color: args%5B1%5D%0A            size: args%5B2%5D%0A            toalha = Towel(color,size)%0A        elif args%5B0%5D == %22show%22%0A        print(toalha)%0A        else:%0A            print(%22Fail:comando inv%C3%A1lido%22\n+doguito.size = %22M%22%0A    print(dopguito)%0A    doguito.dry(3)%0A    print(doguito)%0A    doguito.dry(15)%0A    doguito.dry(10)%0A    print(doguito\n )%0Ama\n",
            "lines": "42"
        },
        {
            "label": "2025-09-29_19-31-05",
            "content": "@@ -840,19 +840,20 @@\n     \n-w\n+W\n hile\n+ =\n  True\n-:\n %0A   \n@@ -1119,22 +1119,17 @@\n = %22show%22\n-:%0A    \n+%0A\n         \n@@ -1199,15 +1199,14 @@\n %C3%A1lido%22)%0A\n-%0A\n main()\n",
            "lines": "49"
        },
        {
            "label": "2025-09-29_19-35-02",
            "content": "@@ -1150,110 +1150,8 @@\n ha)%0A\n-        elif args %5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A\n     \n",
            "lines": "50"
        },
        {
            "label": "2025-09-29_19-37-13",
            "content": "@@ -917,16 +917,17 @@\n it(%22 %22)%0A\n+%0A\n         \n@@ -1013,18 +1013,17 @@\n    color\n- =\n+:\n  args%5B1%5D\n@@ -1039,18 +1039,17 @@\n     size\n- =\n+:\n  args%5B2%5D\n@@ -1082,17 +1082,16 @@\n l(color,\n- \n size)%0A  \n@@ -1262,20 +1262,16 @@\n   else:%0A\n-    \n         \n",
            "lines": "53"
        },
        {
            "label": "2025-10-06_01-26-01",
            "content": "@@ -1,1324 +1,56 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A        self.color: str = color%0A        self.size: str = size%0A        self.wetness: int = 0  %0A%0A    def dry (self, amount:int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMAxetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def isDry (self) -%3E bool:%0A        return self.wetness == 0%0A%0A    def WringOut(self) -%3E None:%0A        self.wetness == 0    %0A%0A    def getMaxWetness(self):%0A        if self.size == %22P%22:%0A            return 10%0A%0A        elif self.size == %22M%22:%0A            return 20%0A%0A        elif self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: %0A        return f%22cor:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0Adef main():%0A    toalha = Towel (%22%22, %22%22)%0A    while True:%0A        line:str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args %5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A                print(%22Fail:comando inv%C3%A1lido%22)%0Amain()\n+@@ -1311,14 +1311,15 @@%0A %25C3%25A1lido%2522)%250A%0A+%250A%0A main()%0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-06_01-28-27",
            "content": "class Towel:\n    def __init__(self, color: str, size: str):\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0  \n\n    def dry (self, amount:int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMAxetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry (self) -> bool:\n        return self.wetness == 0\n\n    def WringOut(self) -> None:\n        self.wetness == 0    \n\n    def getMaxWetness(self):\n        if self.size == \"P\":\n            return 10\n\n        elif self.size == \"M\":\n            return 20\n\n        elif self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str: \n        return f\"cor:{self.color}, tam:{self.size}, hum:{self.wetness}\"\n\ndef main():\n    toalha = Towel (\"\", \"\")\n    while True:\n        line:str = input()\n        args: list[str] = line.split(\" \")\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"new\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args [0] == \"dry\":\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n                print(\"Fail:comando inv\u00e1lido\")\nmain()",
            "lines": "51"
        }
    ]
}